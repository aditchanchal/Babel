{"ast":null,"code":"var _jsxFileName = \"/home/kartikey/Documents/hcl-hackathon/src/components/NewsGrid.js\";\nimport React, { Component } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport NavBar2 from './NavBar2';\nconst root = {\n  flexGrow: 1,\n  overflow: 'hidden',\n  paddingTop: '10px',\n  paddingBottom: '10px',\n  paddingLeft: '20%',\n  paddingRight: '20%',\n  backgroundColor: '#f5f5f5'\n};\nconst paper = {\n  //maxWidth: '400px',\n  margin: \"5px\",\n  padding: '5px',\n  textAlign: 'left'\n};\nconst tileData = [{\n  img: 'This component is responsible for retrieving course data from the Contentful back-end service and displaying the list of courses to the user.',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: \"Truncation should be conditionally applicable on this long line of text\\n as this is a much longer line than what the container can support. \",\n  title: 'Image',\n  author: 'author'\n}, {\n  img: 'pic.jpg',\n  title: 'Image',\n  author: 'author'\n}, {\n  img: \"Truncation should be conditionally applicable on this long line of text\\n as this is a much longer line than what the container can support. \",\n  title: 'Image',\n  author: 'author'\n}, {\n  img: \"Truncation should be conditionally applicable on this long line of text\\n as this is a much longer line than what the container can support. \",\n  title: 'Image',\n  author: 'author'\n}, {\n  img: \"Truncation should be conditionally applicable on this long line of text\\n as this is a much longer line than what the container can support. \",\n  title: 'Image',\n  author: 'author'\n}];\n\nclass NewsGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/get/\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    console.log(this.props.location);\n    /*return (\r\n       <div style={root}>\r\n    \t{tileData.map(tile => (\r\n    \t  <Paper style={paper}>\r\n    \t\t<Grid container wrap=\"nowrap\" spacing={2}>\r\n    \t\t  <Grid item>\r\n    \t\t\t<Avatar>W</Avatar>\r\n    \t\t  </Grid>\r\n    \t\t  <Grid item xs>\r\n    \t\t\t<Typography>{tile.img}</Typography>\r\n    \t\t  </Grid>\r\n    \t\t</Grid>\r\n    \t  </Paper>\r\n    \t))}\r\n       </div>\r\n     ); */\n\n    console.log(this.state);\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"div\", {\n        style: root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, items.map(item => React.createElement(Paper, {\n        style: paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Avatar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, item.price)), React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, item.name))))));\n    }\n  }\n\n}\n\nexport default NewsGrid;","map":{"version":3,"sources":["/home/kartikey/Documents/hcl-hackathon/src/components/NewsGrid.js"],"names":["React","Component","Paper","makeStyles","Grid","Avatar","Typography","NavBar2","root","flexGrow","overflow","paddingTop","paddingBottom","paddingLeft","paddingRight","backgroundColor","paper","margin","padding","textAlign","tileData","img","title","author","NewsGrid","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","console","log","location","message","map","item","price","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NavBar2 from './NavBar2';\r\n\r\nconst root= {\r\n    flexGrow: 1,\r\n    overflow: 'hidden',\r\n    paddingTop: '10px',\r\n    paddingBottom: '10px',\r\n    paddingLeft: '20%',\r\n    paddingRight: '20%',\r\n\tbackgroundColor: '#f5f5f5',\r\n};\r\nconst paper= {\r\n    //maxWidth: '400px',\r\n    margin: `5px`,\r\n    padding: '5px',\r\n\ttextAlign: 'left',\r\n};\r\n\r\n\r\nconst tileData = [\r\n   {\r\n     img: 'This component is responsible for retrieving course data from the Contentful back-end service and displaying the list of courses to the user.',\r\n     title: 'Image',\r\n     author: 'author',\r\n   },\r\n   {\r\n     img: `Truncation should be conditionally applicable on this long line of text\r\n as this is a much longer line than what the container can support. `,\r\n     title: 'Image',\r\n     author: 'author',\r\n   },\r\n   {\r\n     img: 'pic.jpg',\r\n     title: 'Image',\r\n     author: 'author',\r\n   },\r\n   {\r\n     img: `Truncation should be conditionally applicable on this long line of text\r\n as this is a much longer line than what the container can support. `,\r\n     title: 'Image',\r\n     author: 'author',\r\n   },\r\n   {\r\n     img: `Truncation should be conditionally applicable on this long line of text\r\n as this is a much longer line than what the container can support. `,\r\n     title: 'Image',\r\n     author: 'author',\r\n   },\r\n   {\r\n     img: `Truncation should be conditionally applicable on this long line of text\r\n as this is a much longer line than what the container can support. `,\r\n     title: 'Image',\r\n     author: 'author',\r\n   },\r\n];\r\n\r\n\r\n\r\nclass NewsGrid extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\terror: null,\r\n\t\tisLoaded: false,\r\n\t\titems: [],\r\n\t\t};\r\n\t\t\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n    fetch(`http://localhost:5000/get/`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\trender(){\r\n\t\t\r\n\tconsole.log(this.props.location)\r\n\t/*return (\r\n    <div style={root}>\r\n\t\t{tileData.map(tile => (\r\n\t\t  <Paper style={paper}>\r\n\t\t\t<Grid container wrap=\"nowrap\" spacing={2}>\r\n\t\t\t  <Grid item>\r\n\t\t\t\t<Avatar>W</Avatar>\r\n\t\t\t  </Grid>\r\n\t\t\t  <Grid item xs>\r\n\t\t\t\t<Typography>{tile.img}</Typography>\r\n\t\t\t  </Grid>\r\n\t\t\t</Grid>\r\n\t\t  </Paper>\r\n\t\t))}\r\n    </div>\r\n  ); */\r\n  console.log(this.state);\r\n\tconst { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div style={root}>\r\n\t\t{items.map(item => (\r\n\t\t  <Paper style={paper}>\r\n\t\t\t<Grid container wrap=\"nowrap\" spacing={2}>\r\n\t\t\t  <Grid item>\r\n\t\t\t\t<Avatar>{item.price}</Avatar>\r\n\t\t\t  </Grid>\r\n\t\t\t  <Grid item xs>\r\n\t\t\t\t<Typography>{item.name}</Typography>\r\n\t\t\t  </Grid>\r\n\t\t\t</Grid>\r\n\t\t  </Paper>\r\n\t\t))}\r\n    </div>\r\n      );\r\n    }\r\n}\r\n}\r\nexport default NewsGrid;"]},"metadata":{},"sourceType":"module"}